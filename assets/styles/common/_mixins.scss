/* -----------------------------------------------------------------------------

    MIXINS

----------------------------------------------------------------------------- */

	/* -----------------------------------------------------------------------------
		Mixin Media Queries
	----------------------------------------------------------------------------- */

	$breakpoint-desktop: $screen-md-max;
	$breakpoint-tablet: $screen-sm-max;
	$breakpoint-mobile: $screen-xs-max;
	$breakpoint-m-mobile: $screen-xs-min;
	$breakpoint-s-mobile: 320px;

	@mixin screen($size, $type: max, $pixels: $breakpoint-desktop) {
		@if $size == 'desktop' {
			@media screen and ($type + -width: $breakpoint-desktop) {
				@content;
			}
		} @else if $size == 'tablet' {
			@media screen and ($type + -width: $breakpoint-tablet) {
				@content;
			}
		} @else if $size == 'mobile' {
			@media screen and ($type + -width: $breakpoint-mobile) {
				@content;
			}
		} @else if $size == 'm-mobile' {
			@media screen and ($type + -width: $breakpoint-m-mobile) {
				@content;
			}
		} @else if $size == 's-mobile' {
			@media screen and ($type + -width: $breakpoint-s-mobile) {
				@content;
			}
		} @else if $size == 'custom' {
			@media screen and ($type + -width: $pixels + px) {
				@content;
			}
		} @else {
			@content;
		}
	}


	/* -----------------------------------------------------------------------------
		Mixin Font Size
	----------------------------------------------------------------------------- */

	@function calculateRem($size) {
		$remSize: $size * 0.1;
		@return $remSize;
	}

	@mixin font-size($size) {
		font-size: $size + px;
		font-size: calculateRem($size) + rem;
	}


	/* -----------------------------------------------------------------------------
		Mixin Helper
	----------------------------------------------------------------------------- */

	/* Centering Element */
	/* usage: @include center(vertical); */
	/* *Parent must be positioned relative */
	@mixin center($position) {
		position: absolute;

		@if $position == 'vertical' {
			top: 50%;
			-webkit-transform: translateY(-50%);
			-ms-transform: translateY(-50%);
			transform: translateY(-50%);
		} @else if $position == 'horizontal' {
			left: 50%;
			-webkit-transform: translateX(-50%);
			-ms-transform: translateX(-50%);
			transform: translate(-50%);
		} @else if $position == 'both' {
			top: 50%;
			left: 50%;
			-webkit-transform: translate(-50%, -50%);
			-ms-transform: translate(-50%, -50%);
			transform: translate(-50%, -50%);
		} @else {
			-webkit-transform: none;
			-ms-transform: none;
			transform: none;
		}
	}

	/* Clearfix */
	/* usage: @extend %clearfix; */
	%clearfix {
		*zoom: 1;
		&:before, &:after {
			content: " ";
			display: table;
		}
		&:after {
			clear: both;
		}
	}
	
	/* transition */
	@mixin keyframes($animation-name) {
		@-webkit-keyframes #{$animation-name} {
			@content;
		}
		@-moz-keyframes #{$animation-name} {
			@content;
		}  
		@-ms-keyframes #{$animation-name} {
			@content;
		}
		@-o-keyframes #{$animation-name} {
			@content;
		}  
		@keyframes #{$animation-name} {
			@content;
		}
	}
	
	@mixin transitions ($trans) {
		-webkit-transition: $trans;
		-moz-transition: $trans;
		-o-transition: $trans;
		transition: $trans;
	}

	/* Gradients */
	/* usage: @include background-gradient(red, black, 'vertical'); */
	@mixin background-gradient($start-color, $end-color, $orientation) { 
		background: $start-color;

		@if $orientation == 'vertical' {
			background: -webkit-linear-gradient(top, $start-color, $end-color);
			background: linear-gradient(to bottom, $start-color, $end-color);
		} @else if $orientation == 'horizontal' {
			background: -webkit-linear-gradient(left, $start-color, $end-color);
			background: linear-gradient(to right, $start-color, $end-color);
		} @else {
			background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
			background: radial-gradient(ellipse at center, $start-color, $end-color);
		}
	}

	
	/* transform */
	@mixin transform($transform) {
		-webkit-transform: $transform;
		-moz-transform: $transform;
		-ms-transform: $transform;
		-o-transform: $transform;
		transform: $transform;
	}

	/* transform rotate */
	@mixin rotate($deg) {
		@include transform(rotate(#{$deg}deg));
	}

	/* transform origin */
	@mixin transformOrigin($transformX, $transformY) {
		-webkit-transform-origin: $transformX $transformY;
		-moz-transform-origin: $transformX $transformY;
		-ms-transform-origin: $transformX $transformY;
		-o-transform-origin: $transformX $transformY;
		transform-origin: $transformX $transformY;
	}

	/* border radius */
	@mixin bradius($radius) {
		-webkit-border-radius: $radius;
		-moz-border-radius: $radius;
		border-radius: $radius;
	}

	/* Skew */
	@mixin skew($xangle, $yangle) {
		-ms-transform: skew($xangle, $yangle); /* IE 9 */
		-webkit-transform: skew($xangle, $yangle); /* Chrome, Safari, Opera */
		transform: skew($xangle, $yangle);
	}
	
	/* placeholder */
	@mixin placeholder($color) {
		&::-webkit-input-placeholder {
		   color: $color;
		}
		&:-moz-placeholder { /* Firefox 18- */
		   color:  $color;  
		}
		&::-moz-placeholder {  /* Firefox 19+ */
		   color:  $color;  
		}
		&:-ms-input-placeholder {  
		   color:  $color;  
		}
	}

	/* text none */
	@mixin textnone() {
		line-height: 0;
		font-size: 0;
		color: transparent;
	}

	/* fullscreen background */
	@mixin fsBG($bg) { 
		background: url('') no-repeat center center;
		-webkit-background-size: cover;
		-moz-background-size: cover;
		-o-background-size: cover;
		background-size: cover;
	}

	/* fullscreen background cover only */
	@mixin fscover() { 
		background-repeat: no-repeat; 
		background-position: center center;
		-webkit-background-size: cover;
		-moz-background-size: cover;
		-o-background-size: cover;
		background-size: cover;
	}
	
	/* box shadow */
	@mixin box-shadow($bs) { 
		-webkit-box-shadow: $bs;
		-moz-box-shadow: $bs;
		box-shadow: $bs;
	}
	
	@mixin font-smoothing() {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	
	@mixin user-select($us) {
		-webkit-user-select: $us;
		-moz-user-select: $us;
		-ms-user-select: $us;
	}
	
	@mixin box-sizing($bs) {
		-webkit-box-sizing: $bs;
		-moz-box-sizing: $bs;
		box-sizing: $bs;
	}
	
	
